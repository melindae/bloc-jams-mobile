{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingszVA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9DA;AAAA;CCAA;AAAA;AACA;AACA;AAFA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["$('.navbar-left').click(function(e){console.log(e) })\n// Example Album\nvar albumPicasso = {\n  name: 'The Colors',\n  artist: 'Pablo Picasso',\n  label: 'Cubism',\n  year: '1881',\n  albumArtUrl: '/images/album-placeholder.png',\n  songs: [\n     { name: 'Blue', length: '4:26' },\n     { name: 'Green', length: '3:14' },\n     { name: 'Red', length: '5:01' },\n     { name: 'Pink', length: '3:21'},\n     { name: 'Magenta', length: '2:15'}\n  ]\n};\n\n// Another Example Album\nvar albumMarconi = {\n  name: 'The Telephone',\n  artist: 'Guglielmo Marconi',\n  label: 'EM',\n  year: '1909',\n  albumArtUrl: '/images/album-placeholder.png',\n  songs: [\n     { name: 'Hello, Operator?', length: '1:01' },\n     { name: 'Ring, ring, ring', length: '5:01' },\n     { name: 'Fits in your pocket', length: '3:21'},\n     { name: 'Can you hear me now?', length: '3:14' },\n     { name: 'Wrong phone number', length: '2:15'}\n  ]\n}; \nvar currentlyPlayingSong = null;\n\nvar createSongRow = function(songNumber, songName, songLength) {\n  var template =\n     '<tr>'\n   + '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n   + '  <td class=\"col-md-9\">' + songName + '</td>'\n   + '  <td class=\"col-md-2\">' + songLength + '</td>'\n   + '</tr>'\n   ;\n    \n    // attach hover functionality to row before returning\n  var $row = $(template);\n\n    // change from song number to play button when the song isn't playing and row is hovered over\n  var onHover = function(event) {\n    var songNumberCell = $(this).find('.song-number');\n      var songNumber = songNumberCell.data('song-number');\n      if (songNumber !== currentlyPlayingSong) {\n        songNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n  }\n};\n    // change from play button to song number when the song isn't playing and row is hovered over\n  var offHover = function(event) {\n    var songNumberCell = $(this).find('.song-number');\n      var songNumber = songNumberCell.data('song-number');\n        songNumberCell.html(songNumber);\n        if (songNumber !== currentlyPlayingSong) {\n          songNumberCell.html(songNumber);\n  }\n};\n\n  var clickHandler = function(event) {\n    var songNumber = $(this).data('song-number');\n\n    if (currentlyPlayingSong !== null) {\n      // Revert to song number for currently playing song because user started playing new song.\n      currentlyPlayingCell = $('song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n      currentlyPlayingCell.html(currentlyPlayingSong);\n    }\n\n    if (currentlyPlayingSong !== songNumber ) {\n      // Switch from Play -> Pause to indicate new song is playing.\n      $(this).html('<a class=\"album-song-button\"><i class=\"fa fa=pause\"></i></a>');\n      currentlyPlayingSong = songNumber;\n    }\n\n    else if (currentlyPlayingSong === songNumber) {\n      // Switch from Pause -> Play button to pause currently playing song\n      $(this).html('<a class=\"album-song-button\"><i class=\"fa fa=play\"></1></a>');\n      currentlyPlayingSong = null;\n    }\n  };\n\n  $row.find('.song-number').click(clickHandler);\n  $row.hover(onHover, offHover);\n  return $row;\n};\n\n\tvar changeAlbumView = function(album) {\n \t\n\t// Update the album title\n \tvar $albumTitle = $('.album-title');\n \t$albumTitle.text(album.name);\n\n \t// Update the album artist\n \tvar $albumArtist = $('.album-artist');\n \t$albumArtist.text(album.artist);\n\n \t// Update the meta information\n \tvar $albumMeta = $('.album-meta-info');\n \t$albumMeta.text(album.year + \" on \" + album.label);\n\n \t// Update the album image\n \tvar $albumImage = $('.album-image img');\n \t$albumImage.attr('src', album.albumArtUrl);\n\n \t// Update the Song List\n \tvar $songList = $(\".album-song-listing\");\n \t\t$songList.empty();\n \tvar songs = album.songs;\n \t\n\tfor (var i = 0; i < songs.length; i++) {\n \t  var songData = songs[i];\n \t  var $newRow = createSongRow(i + 1, songData.name, songData.length);\n \t  $songList.append($newRow);\n  }\n};\n \nvar updateSeekPercentage = function($seekBar, event) {\n  var barWidth = $seekBar.width();\n  var offsetX = event.pageX - $seekBar.offset().left;\n\n  var offsetXPercent = (offsetX / barWidth) * 100;\n  offsetXPercent = Math.max(0, offsetXPercent);\n  offsetXPercent = Math.min(100, offsetXPercent);\n\n  var percentageString = offsetXPercent + '%';\n  $seekBar.find('.fill').width(percentageString);\n  $seekBar.find('.thumb').css({left: percentageString});  \n  } \n\nvar setupSeekBars = function() {\n\n  $seekBars = $('.player-bar .seek-bar');\n  $seekBars.click(function(event){\n    updateSeekPercentage($(this), event);\n  });\n \n  $seekBars.find('.thumb').mousedown(function(event) {\n    var $seekBars = $(this).parent();\n\n    $seekBar.addClass('no-animate');  \n    \n    $(document).bind('mousemove.thumb', function(event) {\n      updateSeekPercentage($seekBars, event);\n    });\n\n    //cleanup\n    $(document).bind('mouseup.thumb', function() {\n      $seekBar.removeClass('no-animate');\n      $(document).unbind('mousemove.thumb');\n      $(document).unbind('mouseup.thumb');\n    });\n\n  });\n\n}\n\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-Album view pages.\n//  - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n  $(document).ready(function() {\n    changeAlbumView(albumPicasso)\n    setupSeekBars()\n  });\n  \n}","var albumPicasso = {\n  name: 'The Colors',\n  artist: 'Pablo Picasso',\n  label: 'Cubism',\n  year: '1881',\n  albumArtUrl: '/images/album-placeholder.png',\n  songs: [\n    { name: 'Blue', length: '163.38', audioUrl: '/music/placeholders/blue' },\n    { name: 'Green', length: '105.66', audioUrl: '/music/placeholders/green' },\n    { name: 'Red', length: '270.14', audioUrl: '/music/placeholders/red' },\n    { name: 'Pink', length: '154.81', audioUrl: '/music/placeholders/pink' },\n    { name: 'Magenta', length: '375.92', audioUrl: '/music/placeholders/magenta' }\n  ]\n};\n\nblocJams = angular.module('BlocJams', ['ui.router', 'ui.bootstrap']);\n\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n  $locationProvider.html5Mode(true);\n\n  $stateProvider.state('landing', {\n    url: '/',\n    controller:'Landing.controller',\n    templateUrl: '/templates/landing.html'\n  });\n\n  $stateProvider.state('collection', {\n    url: '/collection',\n    controller:'Collection.controller',\n    templateUrl: '/templates/collection.html'\n  });\n\n  $stateProvider.state('album', {\n    url: '/album',\n    controller:'Album.controller',\n    templateUrl: '/templates/album.html',\n   });\n\n  $stateProvider.state('profile', {\n    url: '/profile',\n    templateUrl: '/templates/profile.html',\n  });\n}]);\n\nblocJams.controller('Landing.controller', ['$scope', function($scope) {\n\n   $scope.albumURLs = [\n     '/images/album-placeholders/album-1.jpg',\n     '/images/album-placeholders/album-2.jpg',\n     '/images/album-placeholders/album-3.jpg',\n     '/images/album-placeholders/album-4.jpg',\n     '/images/album-placeholders/album-5.jpg',\n     '/images/album-placeholders/album-6.jpg',\n     // '/images/album-placeholders/album-7.jpg',\n     // '/images/album-placeholders/album-8.jpg',\n     // '/images/album-placeholders/album-9.jpg',\n      ];\n}]);\n\nblocJams.controller('Collection.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.albums = [];\n    for (var i = 0; i < 33; i++) {\n      $scope.albums.push(angular.copy(albumPicasso));\n    }\n\n  $scope.playAlbum = function(album) {\n    SongPlayer.setSong(album, album.songs[0]);\n  }\n}]);\n\nblocJams.controller('Album.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.album = angular.copy(albumPicasso);\n\n  var hoveredSong = null;\n\n  $scope.onHoverSong = function(song) {\n    hoveredSong = song;\n  };\n\n  $scope.offHoverSong = function(song) {\n    hoveredSong = null;\n  };\n\n  $scope.getSongState = function(song) {\n    if (song === SongPlayer.currentSong && SongPlayer.playing) {\n      return 'playing';\n    }\n    else if (song === hoveredSong) {\n      return 'hovered';\n    }\n    return 'default';\n  };\n\n  $scope.playSong = function(song) {\n    SongPlayer.setSong($scope.album, song);\n  };\n\n  $scope.pauseSong = function(song) {\n    SongPlayer.pause();\n  };\n}]);\n\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.songPlayer = SongPlayer;\n\n    $scope.volumeClass = function() {\n      return {\n        'fa-volume-off': SongPlayer.volume == 0,\n        'fa-volume-down': SongPlayer.volume <= 70 && SongPlayer.volume > 0,\n        'fa-volume-up': SongPlayer.volume > 70\n      }\n    }\n\n    $scope.muteVolume = function() {\n      if (SongPlayer.volume != 0) {\n        savedVolume =  SongPlayer.volume;\n        SongPlayer.setVolume(0);\n      }\n\n      else {\n        SongPlayer.setVolume(savedVolume)\n      }\n    }\n\n  SongPlayer.onTimeUpdate(function(event, time){\n    $scope.$apply(function(){\n      $scope.playTime = time;\n    });\n  });\n}]);\n\nblocJams.controller('CollapseMenu', function($scope) {\n  $scope.isCollapsed = false;\n});\n\nblocJams.service('SongPlayer', ['$rootScope', function($rootScope) {\n  var currentSoundFile = null;\n  var trackIndex = function(album,song) {\n    return album.songs.indexOf(song);\n  };\n\n  return {\n    currentSong: null,\n    currentAlbum: null,\n    playing: false,\n    volume: 90,\n\n    play: function() {\n      this.playing = true;\n      currentSoundFile.play();\n    },\n    \n    pause: function() {\n      this.playing = false;\n      currentSoundFile.pause();\n    },\n    \n    next: function() {\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n      currentTrackIndex++;\n      if (currentTrackIndex >= this.currentAlbum.songs.length) {\n        currentTrackIndex = 0;\n      }\n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n    },\n    \n    previous: function() {\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n      currentTrackIndex--;\n      if (currentTrackIndex < 0) {\n        currentTrackIndex = this.currentAlbum.songs.length - 1;\n      }\n \n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n    },\n    \n    seek: function(time) {\n      // checks to make sure that a sound file is playing before seeking\n      if(currentSoundFile) {\n        // uses a Buzz method to set the time of the song\n        currentSoundFile.setTime(time);\n      }\n    },\n\n    setVolume: function(volume) {\n      if (currentSoundFile) {\n        currentSoundFile.setVolume(volume);\n      }\n      this.volume = volume;\n    },\n\n    onTimeUpdate: function(callback) {\n      return $rootScope.$on('sound:timeupdate', callback);\n    },\n\n    setSong: function(album,song) {\n      if (currentSoundFile) {\n        currentSoundFile.stop();\n      }\n      this.currentAlbum = album;\n      this.currentSong = song;\n\n      currentSoundFile = new buzz.sound(song.audioUrl, {\n        formats: [\"mp3\"],\n        preload: true\n      });\n\n      currentSoundFile.bind('timeupdate', function(e){\n        $rootScope.$broadcast('sound:timeupdate', this.getTime());\n      });\n\n      this.play();\n    }\n  };\n}]);\n\n\n//  $document, used below is a service and seeds to be injected here to be used \nblocJams.directive('slider', ['$document', function($document){\n\n  // Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\n  var calculateSliderPercentFromMouseEvent = function($slider, event) {\n    var offsetX =  event.pageX - $slider.offset().left; // dist from left\n    var sliderWidth = $slider.width(); // width of slider\n    var offsetXPercent = (offsetX  / sliderWidth);\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(1, offsetXPercent);\n    return offsetXPercent;\n  }\n\n  var numberFromValue = function(value, defaultValue) {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    if (typeof value ==='undefined') {\n      return defaultValue;\n    }\n\n    if (typeof value === 'string') {\n      return Number(value);\n    }\n  }\n\n  return {\n    templateUrl: '/templates/directives/slider.html',\n    replace: true,\n    restrict: 'E',\n    scope: {\n      onChange: '&'\n    }, \n    \n    link: function(scope, element, attributes) {\n      // rogress into the song/volume bar, and max value.\n      scope.value = 0;\n      scope.max = 100;\n      var $seekBar = $(element);\n\n      console.log(attributes);\n\n      attributes.$observe('value', function(newValue) {\n        scope.value = numberFromValue(newValue, 0);\n      });\n\n      attributes.$observe('max', function(newValue) {\n        scope.max = numberFromValue(newValue, 100) || 100;\n      });\n \n      var percentString = function () {\n        var value = scope.value || 0;\n        var max = scope.max || 100;\n        percent = value / max * 100;\n        return percent + \"%\";\n      }\n \n      scope.fillStyle = function() {\n        return {width: percentString()};\n      }\n \n      scope.thumbStyle = function() {\n        return {left: percentString()};\n      }\n\n      scope.onClickSlider = function(event) {\n        var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n        scope.value = percent * scope.max;\n        notifyCallback(scope.value);\n      }\n\n      scope.trackThumb = function() {\n        // .bind attaches handler to element and specifies function to run when event triggers\n        $document.bind('mousemove.thumb', function(event){\n          var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n          // $apply looks for changes to the scope object when called (changes not triggered by angular)\n          scope.$apply(function(){\n            scope.value = percent * scope.max;\n            notifyCallback(scope.value);\n          });\n        });\n         \n        //cleanup\n        $document.bind('mouseup.thumb', function(){\n          $document.unbind('mousemove.thumb');\n          $document.unbind('mouseup.thumb');\n        });\n      };\n\n      var notifyCallback = function(newValue){\n        if(typeof scope.onChange === 'function') {\n          scope.onChange({value: newValue});\n        }\n      };\n    }\n  }\n}]); \n\nblocJams.filter('timecode', function() {\n  return function(seconds) {\n    seconds = Number.parseFloat(seconds);\n\n    // returned if no time if provided\n    if (Number.isNaN(seconds)) {\n      return '-:--';\n    }\n\n    //make it a whole number\n    var wholeSeconds = Math.floor(seconds);\n\n    var minutes = Math.floor(wholeSeconds / 60);\n\n    remainingSeconds = wholeSeconds % 60;\n\n    var output = minutes + ':';\n\n    //zero pad seconds\n    if (remainingSeconds < 10) {\n      output += '0';\n    }\n\n    output += remainingSeconds;\n\n    return output;\n  }\n})","var buildAlbumThumbnail = function() {\n  var template =\n      '<div class=\"collection-album-container col-md-2\">'\n    + '  <div class=\"collection-album-image-container\">'\n    + '    <img src=\"/images/album-placeholder.png\"/>'\n    + '  </div>'\n    + '  <div class=\"caption album-collection-info\">'\n    + '    <p>'\n    + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n    + '      <br/>'\n    + '      <a href=\"/album.html\"> Artist name </a>'\n    + '      <br/>'\n    + '      X songs'\n    + '    </p>'\n    + '  </div>'\n    + '</div>';\n\n return $(template);\n};\n\nvar buildAlbumOverlay = function(albumURL) {\n  var template =\n      '<div class=\"collection-album-image-overlay\">'\n    + '  <div class=\"collection-overlay-content\">'\n    + '    <a class=\"collection-overlay-button\" href=\"' + albumURL + '\">'\n    + '      <i class=\"fa fa-play\"></i>'\n    + '    </a>'\n    + '    &nbsp;'\n    + '    <a class=\"collection-overlay-button\">'\n    + '      <i class=\"fa fa-plus\"></i>'\n    + '    </a>'\n    + '  </div>'\n    + '</div>'\n    ;\n  return $(template);\n};\n\nvar updateCollectionView = function() {\n  var $collection = $(\".collection-container .row\");\n  $collection.empty();\n \n \tfor (var i = 0; i < 33; i++) {\n   \tvar $newThumbnail = buildAlbumThumbnail();\n   \t$collection.append($newThumbnail);\n  }\n    \n \tvar onHover = function(event) {\n   \t$(this).append(buildAlbumOverlay(\"/album.html\"));\n  };\n\n\tvar offHover = function(event) {\n\t\t$(this).find('.collection-album-image-overlay').remove();\n  };\n\n\t$collection.find('.collection-album-image-container').hover(onHover, offHover);\n};\n\nif (document.URL.match(/\\/collection.html/)) {\n   // Wait until the HTML is fully processed.\n  $(document).ready(function() {\n\t\tupdateCollectionView();\n  });\n}","$(document).ready(function() { \n\t\n});","var tabsContainer = \".user-profile-tabs-container\"\r\nvar selectTabHandler = function(event) {\r\n\t$tab = $(this);\r\n\t$(tabsContainer + \" li\").removeClass('active');\r\n\t$tab.parent().addClass('active');\r\n\tselectedTabName = $tab.attr('href');\r\n\tconsole.log(selectedTabName);\r\n\t$(\".tab-pane\").addClass('hidden');\r\n\t$(selectedTabName).removeClass('hidden');\r\n\tevent.preventDefault();\r\n};\r\n\r\nif (document.URL.match(/\\/profile.html/)) {\r\n\t$(document).ready(function() {\r\n\t\tvar $tabs = $(tabsContainer + \" a\");\r\n\t\t$tabs.click(selectTabHandler);\r\n\t\t$tabs[0].click();\r\n\t});\r\n}\r\n"]}